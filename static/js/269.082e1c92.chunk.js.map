{"version":3,"file":"static/js/269.082e1c92.chunk.js","mappings":"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","sources":["pages/MoviesDetails/MoviesDetails.styled.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MoviesDetails/MovieDetails.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n    padding-top: 16px;\n    padding-right: 16px;\n    padding-left: 16px;\n    padding-bottom: 16px;\n    color: #411100;\n    background-color: white; \n`;\n\nexport const Button = styled.button`\n    font-size: 16px;\n    font-weight: 700;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    padding: 8px;\n    margin-bottom: 16px;\n    color: red;\n    background-color: white; \n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1), background-color 250ms cubic-bezier(0.4, 0, 0.2, 1), border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,\n    &:focus {\n        color: white;\n        background-color: #32CD32;\n        border-color: none;\n    }\n`;\n\nexport const AdditionalContainer = styled.div`\n    padding-bottom: 8px;\n    margin-bottom: 16px;\n    border-bottom: 3px double;\n    border-color: black;\n`;\n\nexport const AdditionalTitle = styled.h4`\n    font-size: 20px;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    margin-bottom: 8px;\n    text-transform: uppercase;\n    text-align: center;\n`;\n\nexport const AdditionalList = styled.ul`\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    text-align: center;\n\n`;\n\nexport const AdditionalItem = styled.li`\n    &:not(:last-child) {\n        margin-bottom: 8px;\n    }\n`;\n\nexport const AdditionalLink = styled(NavLink)`\n    text-decoration: none;\n    font-size: 20px;\n    font-weight: 700;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    color: #491300;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover:not(.active),\n    &:focus:not(.active) {\n        color: #32CD32;\n    }\n    &.active {\n        color: #32CD32;\n    }\n`;","import styled from 'styled-components';\n\nexport const Poster = styled.div`\n    margin-right: 24px;\n`;\n\nexport const MovieContainer = styled.div`\n    display: flex;\n    padding-bottom: 8px;\n    margin-bottom: 16px;\n    border-bottom: 3px double;\n    border-color: black;\n`;\n\nexport const MovieTitle = styled.h3`\n    font-size: 32px;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    margin-bottom: 24px;\n`;\n\nexport const OverviewTitle = styled.h4`\n    font-size: 20px;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    margin-bottom: 8px;\n`;\n\nexport const UserScores = styled.p`\n    margin-bottom: 48px;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n\n`;\n\nexport const OverviewText = styled.p`\n    margin-bottom: 48px;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n\n`;\n","import { Poster, MovieContainer, MovieTitle, OverviewTitle, UserScores, OverviewText } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movie }) => {\n    const BaseImg = 'https://image.tmdb.org/t/p/w500';\n\n    const { poster_path, title, release_date, overview, vote_average, genres } = movie;\n    return (\n        <MovieContainer>\n            <Poster>\n                <img src={BaseImg + poster_path} alt={title} width={280} />\n            </Poster>\n            <div>\n                <MovieTitle>{title} ({release_date.slice(0, 4)})</MovieTitle>\n                <UserScores>User scores: {Math.ceil(vote_average*10)}%</UserScores>\n                <OverviewTitle>Overview</OverviewTitle>\n                <OverviewText>{overview}</OverviewText>\n                <OverviewTitle>Genres</OverviewTitle>\n                <OverviewText>{genres.map(genre => genre.name).join(', ')}</OverviewText>\n            </div>\n        </MovieContainer>\n    );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n    movie: PropTypes.shape({\n        poster_path: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        release_date: PropTypes.string.isRequired,\n        overview: PropTypes.string.isRequired,\n    }),\n};\n","import { Section, Button, AdditionalContainer, AdditionalTitle, AdditionalList, AdditionalItem, AdditionalLink } from './MoviesDetails.styled';\nimport { useNavigate, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'services/Api';\nimport { Loader } from '../../components/Loader/Loader';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const movieInfo = async () => {\n            try {\n                const data = await api.fetchMovieInfo(movieId);\n                setMovie(data);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        movieInfo();\n    }, [movieId]);\n\n    const navigate = useNavigate();\n\n    const location = useLocation();\n\n    return (\n        <>\n            {movie &&\n                <Section>\n                <Button type='button' onClick={()=>navigate(location?.state?.from ?? '/')}> Go back </Button>\n                    <MovieCard movie={movie}/>\n                    <AdditionalContainer>\n                        <AdditionalTitle>Additional information</AdditionalTitle>\n                        <AdditionalList>\n                            <AdditionalItem>\n                                <AdditionalLink state={{ from: location.state?.from }} to='cast'>Cast</AdditionalLink>\n                            </AdditionalItem>\n                            <AdditionalItem>\n                                <AdditionalLink state={{ from: location.state?.from }} to='reviews'>Reviews</AdditionalLink>\n                            </AdditionalItem>\n                        </AdditionalList>\n                    </AdditionalContainer>\n                        {isLoading && <Loader />}\n                        {error && toast.error('Please wait..')}\n                        <Outlet />\n                </Section>}\n        </>\n    )\n}\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst moviesAPI = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\n\nconst API_KEY = '6aa771366ac6b5ed8b84d1848afc45ff';\n\nexport const fetchMoviesTrending = async () => {\n    const response = await moviesAPI.get('trending/movie/day?', {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n    return response.data.results;\n}\n\nexport const fetchMovieSearch = async (searchQuery) => {\n    const response = await moviesAPI.get('/search/movie?', {\n        params: {\n            api_key: API_KEY,\n            query: searchQuery,\n        },\n    });\n\n    return response.data.results;\n}\n\nexport const fetchMovieInfo = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data;\n}\n\nexport const fetchMovieCast = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}/credits?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}/reviews?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.results;\n}\n\nconst api = {\n    fetchMoviesTrending,\n    fetchMovieSearch,\n    fetchMovieInfo,\n    fetchMovieCast,\n    fetchMovieReviews,\n}\n\nexport default api;"],"names":["Section","styled","Button","AdditionalContainer","AdditionalTitle","AdditionalList","AdditionalItem","AdditionalLink","NavLink","Poster","MovieContainer","MovieTitle","OverviewTitle","UserScores","OverviewText","movie","poster_path","title","release_date","overview","vote_average","genres","src","alt","width","slice","Math","ceil","map","genre","name","join","useState","setMovie","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","movieInfo","api","data","message","navigate","useNavigate","location","useLocation","type","onClick","state","from","to","Loader","toast","moviesAPI","axios","baseURL","API_KEY","fetchMoviesTrending","get","params","api_key","response","results","fetchMovieSearch","searchQuery","query","fetchMovieInfo","id","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}